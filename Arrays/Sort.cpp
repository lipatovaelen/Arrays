//Sort.cpp

#pragma once
#include"stdafx.h"
#include"constans.h"

void Sort(int arr[], const int n)
{
	//Сортировка массива:
	for (int i = 0; i < n; i++)	//Счетчик 'i' выбирает элемент, в который нкжно поместить минимальное значение
	{
		for (int j = i + 1; j < n; j++)	//Счетчик 'j' перебирает элементы в поисках минимального значения.
		{//Перебирается только правая часть массива относительно выбранного элемента.
			if (arr[j] < arr[i])
			{
				int buffer = arr[i];
				arr[i] = arr[j];
				arr[j] = buffer;
			}
		}
	}
}
void Sort(double arr[], const int n)
{
	//Сортировка массива:
	for (int i = 0; i < n; i++)	//Счетчик 'i' выбирает элемент, в который нкжно поместить минимальное значение
	{
		for (int j = i + 1; j < n; j++)	//Счетчик 'j' перебирает элементы в поисках минимального значения.
		{//Перебирается только правая часть массива относительно выбранного элемента.
			if (arr[j] < arr[i])
			{
				double buffer = arr[i];
				arr[i] = arr[j];
				arr[j] = buffer;
			}
		}
	}
}

void Sort(int arr[ROWS][COLS], const int ROWS, const int COLS)
{
	//Сортировка массива:
	for (int i = 0; i < ROWS; i++)	//Счетчик 'i' выбирает элемент, в который нкжно поместить минимальное значение
	{
		for (int j = i + 1; j < COLS; j++)	//Счетчик 'j' перебирает элементы в поисках минимального значения.
		{//Перебирается только правая часть массива относительно выбранного элемента.
			if (arr[j] < arr[i])
			{
				/*int buffer = arr[i];
				arr[i][j] = arr[j];
				arr[j] = buffer;*/
			}
		}
	}
}
